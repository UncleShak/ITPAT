unit AgentnClient_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Vcl.ExtCtrls, dmChromeSkyEstates_u, Vcl.Buttons, Vcl.StdCtrls,
  Vcl.Samples.Spin, Vcl.DBCtrls;

type
  TfrmAgentsnClients_u = class(TForm)
    pnlAgents: TPanel;
    pnlClients: TPanel;
    dbgAgents: TDBGrid;
    pnlClose: TPanel;
    spdClose: TSpeedButton;
    dbgProperties: TDBGrid;
    pnlControls: TPanel;
    pnlNavBar: TPanel;
    lblSearch: TLabel;
    edtSearch: TEdit;
    pnlSearch: TPanel;
    SpeedButton1: TSpeedButton;
    pnlSortAlphabeticallyASC: TPanel;
    pnlSortAlphabeticallyDESC: TPanel;
    spdSortAlpheticallyASC: TSpeedButton;
    spdSortAlphabeticallyDESC: TSpeedButton;
    pnlControlFirst: TPanel;
    pnlControlPrior: TPanel;
    pnlControlNext: TPanel;
    pnlControlLast: TPanel;
    spdControlFirst: TSpeedButton;
    spdControlPrior: TSpeedButton;
    spdControlNext: TSpeedButton;
    spdControlLast: TSpeedButton;
    pnlControls2: TPanel;
    pnlControlFirst2: TPanel;
    spdControlFirst2: TSpeedButton;
    pnlControlPrior2: TPanel;
    spdControlPrior2: TSpeedButton;
    pnlControlNext2: TPanel;
    spdControlNext2: TSpeedButton;
    pnlControlLast2: TPanel;
    spdControlLast2: TSpeedButton;
    pnlSearch1: TPanel;
    pnlFilter: TPanel;
    lblRoomAmount: TLabel;
    spnRoomAmount: TSpinEdit;
    lblClientID: TLabel;
    edtClientID: TEdit;
    tClock: TTimer;
    lblClock: TLabel;
    lblHeader: TLabel;
    pnlAddUser: TPanel;
    pnlEditUser: TPanel;
    pnlDeleteUser: TPanel;
    spdAddUser: TSpeedButton;
    spdEditUser: TSpeedButton;
    spdDeleteUser: TSpeedButton;
    pnlInfo: TPanel;
    DBText1: TDBText;
    DBText2: TDBText;
    DBText3: TDBText;
    DBText4: TDBText;
    DBText5: TDBText;
    DBText6: TDBText;
    DBText7: TDBText;
    lblAgentID: TLabel;
    lblFirstName: TLabel;
    lblLastName: TLabel;
    lblAge: TLabel;
    lblGender: TLabel;
    lblRace: TLabel;
    lblSalesRecord: TLabel;
    edtAgentID: TEdit;
    edtFirstName: TEdit;
    edtLastName: TEdit;
    edtAge: TEdit;
    edtGender: TEdit;
    edtRace: TEdit;
    edtSalesRecord: TEdit;
    pnlAdd: TPanel;
    spdAddAgent2: TSpeedButton;
    procedure spdCloseClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure spdSortAlpheticallyASCClick(Sender: TObject);
    procedure spdSortAlphabeticallyDESCClick(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure spdControlFirstClick(Sender: TObject);
    procedure spdControlPriorClick(Sender: TObject);
    procedure spdControlNextClick(Sender: TObject);
    procedure spdControlLastClick(Sender: TObject);
    procedure spdControlFirst2Click(Sender: TObject);
    procedure spdControlPrior2Click(Sender: TObject);
    procedure spdControlNext2Click(Sender: TObject);
    procedure spdControlLast2Click(Sender: TObject);
    procedure tClockTimer(Sender: TObject);
    procedure spdAddUserClick(Sender: TObject);
    procedure spdAddAgent2Click(Sender: TObject);
    procedure spdEditUserClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmAgentsnClients_u: TfrmAgentsnClients_u;

implementation

uses
  ChromeSkyEstates_u;

{$R *.dfm}

procedure TfrmAgentsnClients_u.FormActivate(Sender: TObject);
begin
  with dmCSE do
  begin
    qryAgents.Close;
    qryAgents.SQL.Clear;
    qryAgents.SQL.Add('SELECT * FROM tblAgents');
    qryAgents.Open;

    qryProperties.Close;
    qryProperties.SQL.Clear;
    qryProperties.SQL.Add('SELECT * FROM tblProperties');
    qryProperties.Open;
  end;
  dbgProperties.Columns[0].Width := 70;
  dbgProperties.Columns[1].Width := 115;
  dbgProperties.Columns[2].Width := 85;
  dbgProperties.Columns[3].Width := 79;
  dbgProperties.Columns[4].Width := 100;
  dbgProperties.Columns[5].Width := 75;

  dbgAgents.Columns[0].Width := 70;
  dbgAgents.Columns[1].Width := 80;
  dbgAgents.Columns[2].Width := 80;
  dbgAgents.Columns[3].Width := 70;
  dbgAgents.Columns[4].Width := 80;
  dbgAgents.Columns[5].Width := 100;
  dbgAgents.Columns[6].Width := 90;

  spnRoomAmount.MinValue := 3;
  spnRoomAmount.MaxValue := 10;
end;

procedure TfrmAgentsnClients_u.spdAddAgent2Click(Sender: TObject);
var
  sAgentID, sFirstName, sLastName, sGender, sRace: string;
  iAge, iSalesRecord: integer;
begin
  sAgentID := edtAgentID.Text;
  sFirstName := edtFirstName.Text;
  sLastName := edtLastName.Text;
  sGender := edtGender.Text;
  sRace := edtRace.Text;
  iAge := StrToInt(edtAge.Text);
  iSalesRecord := StrToInt(edtSalesRecord.Text);

  with dmCSE do
  begin
    qryAgents.First;
    while not qryAgents.Eof do
    begin
      if sAgentID = qryAgents['Agent_ID'] then
      begin
        ShowMessage('Agent ID already exists');
        exit;
      end
      else
        qryAgents.Next;
    end;
    if iAge >= 18 then
    begin
      qryAgents.Insert;
      qryAgents['Agent_ID'] := sAgentID;
      qryAgents['First_Name'] := sFirstName;
      qryAgents['Last_Name'] := sLastName;
      qryAgents['Gender'] := sGender;
      qryAgents['Race'] := sRace;
      qryAgents['Age'] := iAge;
      qryAgents['Sales_Record'] := iSalesRecord;
      qryAgents.Post;
    end
    else
      ShowMessage('Agent must be over the age of 18');

  end;
end;

procedure TfrmAgentsnClients_u.spdAddUserClick(Sender: TObject);
begin
  edtAgentID.Visible := True;
  edtFirstName.Visible := True;
  edtLastName.Visible := True;
  edtAge.Visible := True;
  edtGender.Visible := True;
  edtRace.Visible := True;
  edtSalesRecord.Visible := True;
  pnlAdd.Visible := True;
end;

procedure TfrmAgentsnClients_u.spdCloseClick(Sender: TObject);
begin
  frmLoginScreen.Close;
  frmAgentsnClients_u.Close;

end;

procedure TfrmAgentsnClients_u.spdControlFirst2Click(Sender: TObject);
begin
  dmCSE.qryProperties.First;
end;

procedure TfrmAgentsnClients_u.spdControlFirstClick(Sender: TObject);
begin
  dmCSE.qryAgents.First;
  with dmCSE do
  begin
    edtAgentID.Text := qryAgents['Agent_ID'];
    edtFirstName.Text := qryAgents['First_Name'];
    edtLastName.Text := qryAgents['Last_Name'];
    edtAge.Text := qryAgents['Age'];
    edtGender.Text := qryAgents['Gender'];
    edtRace.Text := qryAgents['Race'];
    edtSalesRecord.Text := qryAgents['Sales_Record'];
  end;
end;

procedure TfrmAgentsnClients_u.spdControlLast2Click(Sender: TObject);
begin
  dmCSE.qryProperties.Last;
end;

procedure TfrmAgentsnClients_u.spdControlLastClick(Sender: TObject);
begin
  dmCSE.qryAgents.Last;
  with dmCSE do
  begin
    edtAgentID.Text := qryAgents['Agent_ID'];
    edtFirstName.Text := qryAgents['First_Name'];
    edtLastName.Text := qryAgents['Last_Name'];
    edtAge.Text := qryAgents['Age'];
    edtGender.Text := qryAgents['Gender'];
    edtRace.Text := qryAgents['Race'];
    edtSalesRecord.Text := qryAgents['Sales_Record'];
  end;
end;

procedure TfrmAgentsnClients_u.spdControlNext2Click(Sender: TObject);
begin
  dmCSE.qryProperties.Next;
end;

procedure TfrmAgentsnClients_u.spdControlNextClick(Sender: TObject);
begin
  dmCSE.qryAgents.Next;
  with dmCSE do
  begin
    edtAgentID.Text := qryAgents['Agent_ID'];
    edtFirstName.Text := qryAgents['First_Name'];
    edtLastName.Text := qryAgents['Last_Name'];
    edtAge.Text := qryAgents['Age'];
    edtGender.Text := qryAgents['Gender'];
    edtRace.Text := qryAgents['Race'];
    edtSalesRecord.Text := qryAgents['Sales_Record'];
  end;

end;

procedure TfrmAgentsnClients_u.spdControlPrior2Click(Sender: TObject);
begin
  dmCSE.qryProperties.prior;
end;

procedure TfrmAgentsnClients_u.spdControlPriorClick(Sender: TObject);
begin
  dmCSE.qryAgents.prior;
  with dmCSE do
  begin
    edtAgentID.Text := qryAgents['Agent_ID'];
    edtFirstName.Text := qryAgents['First_Name'];
    edtLastName.Text := qryAgents['Last_Name'];
    edtAge.Text := qryAgents['Age'];
    edtGender.Text := qryAgents['Gender'];
    edtRace.Text := qryAgents['Race'];
    edtSalesRecord.Text := qryAgents['Sales_Record'];
  end;
end;

procedure TfrmAgentsnClients_u.spdEditUserClick(Sender: TObject);
begin
  edtAgentID.Visible := True;
  edtFirstName.Visible := True;
  edtLastName.Visible := True;
  edtAge.Visible := True;
  edtGender.Visible := True;
  edtRace.Visible := True;
  edtSalesRecord.Visible := True;
  pnlAdd.Visible := True;

  spdAddAgent2.Caption := 'Edit';
  with dmCSE do
  begin
    edtAgentID.Text := qryAgents['Agent_ID'];
    edtFirstName.Text := qryAgents['First_Name'];
    edtLastName.Text := qryAgents['Last_Name'];
    edtAge.Text := qryAgents['Age'];
    edtGender.Text := qryAgents['Gender'];
    edtRace.Text := qryAgents['Race'];
    edtSalesRecord.Text := qryAgents['Sales_Record'];
  end;
end;

procedure TfrmAgentsnClients_u.spdSortAlphabeticallyDESCClick(Sender: TObject);
begin
  with dmCSE do
  begin
    qryAgents.Sort := ('Agent_ID DESC');
    qryProperties.Sort := ('Assigned_Agent DESC')

  end;
end;

procedure TfrmAgentsnClients_u.spdSortAlpheticallyASCClick(Sender: TObject);
begin
  with dmCSE do
  begin
    qryAgents.Sort := ('Agent_ID ASC');
    qryProperties.Sort := ('Assigned_Agent ASC')

  end;
end;

procedure TfrmAgentsnClients_u.SpeedButton1Click(Sender: TObject);
var
  iRoomAmount: integer;
  sAgentID, sClientID: string;
begin
  iRoomAmount := spnRoomAmount.Value;
  sAgentID := edtSearch.Text;
  sClientID := edtClientID.Text;
  if (sAgentID = '') or (sAgentID = 'Enter Agent ID') then
  begin
    ShowMessage('Please enter an Agent Identification Number');
    exit;
  end;
  if (iRoomAmount < 3) and (edtClientID.Text = 'Enter Client ID') then
  begin
    with dmCSE do
    begin
      qryAgents.Close;
      qryAgents.SQL.Clear;
      qryAgents.SQL.Add('SELECT * FROM tblAgents WHERE Agent_ID="' +
        sAgentID + '"');
      qryAgents.Open;

      qryProperties.Close;
      qryProperties.SQL.Clear;
      qryProperties.SQL.Add('SELECT * FROM tblProperties WHERE Assigned_Agent="'
        + sAgentID + '"');
      qryProperties.Open;
    end;
  end
  else if (iRoomAmount >= 3) and (sClientID = 'Enter Client ID') then
  begin
    with dmCSE do
    begin
      qryAgents.Close;
      qryAgents.SQL.Clear;
      qryAgents.SQL.Add('SELECT * FROM tblAgents WHERE Agent_ID="' +
        sAgentID + '"');
      qryAgents.Open;

      qryProperties.Close;
      qryProperties.SQL.Clear;
      qryProperties.SQL.Add('SELECT * FROM tblProperties WHERE Assigned_Agent="'
        + sAgentID + '" AND Room_Amount=' + IntToStr(iRoomAmount) + '');
      qryProperties.Open;
    end;
  end
  else if (iRoomAmount >= 3) and (sClientID <> 'Enter Client ID') then
  begin
    with dmCSE do
    begin
      qryAgents.Close;
      qryAgents.SQL.Clear;
      qryAgents.SQL.Add('SELECT * FROM tblAgents WHERE Agent_ID="' +
        sAgentID + '"');
      qryAgents.Open;

      qryProperties.Close;
      qryProperties.SQL.Clear;
      qryProperties.SQL.Add('SELECT * FROM tblProperties WHERE Assigned_Agent="'
        + sAgentID + '" AND Client_ID="' + sClientID + '"');
      qryProperties.Open;
    end;

  end
  else
  begin
    with dmCSE do
    begin
      qryAgents.Close;
      qryAgents.SQL.Clear;
      qryAgents.SQL.Add('SELECT * FROM tblAgents');
      qryAgents.Open;

      qryProperties.Close;
      qryProperties.SQL.Clear;
      qryProperties.SQL.Add('SELECT * FROM tblProperties');
      qryProperties.Open;
    end;
  end;

  dbgProperties.Columns[0].Width := 70;
  dbgProperties.Columns[1].Width := 115;
  dbgProperties.Columns[2].Width := 85;
  dbgProperties.Columns[3].Width := 79;
  dbgProperties.Columns[4].Width := 100;
  dbgProperties.Columns[5].Width := 75;

  dbgAgents.Columns[0].Width := 70;
  dbgAgents.Columns[1].Width := 80;
  dbgAgents.Columns[2].Width := 80;
  dbgAgents.Columns[3].Width := 70;
  dbgAgents.Columns[4].Width := 80;
  dbgAgents.Columns[5].Width := 100;
  dbgAgents.Columns[6].Width := 90;

end;

procedure TfrmAgentsnClients_u.tClockTimer(Sender: TObject);
begin
  lblClock.Caption := TimeToStr(Time);
end;

end.
