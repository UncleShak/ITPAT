unit ForgotPassword_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, dmChromeSkyEstates_u, Vcl.Buttons,
  Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls, Vcl.Imaging.pngimage;

type
  TfrmForgotPassword = class(TForm)
    imgLogo: TImage;
    lblHeader: TLabel;
    lblInstruction: TLabel;
    pnlVerify: TPanel;
    spdVerify: TSpeedButton;
    edtNewPassword: TEdit;
    edtVerifyPassword: TEdit;
    edtUsername: TEdit;
    lblNewPassword: TLabel;
    lblConfirmPassword: TLabel;
    pnlGreetings: TPanel;
    Image1: TImage;
    lblMessage: TLabel;
    pnlLogin: TPanel;
    spdLogin: TSpeedButton;
    Button1: TButton;
    procedure spdVerifyClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure spdLoginClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }

  public
    { Public declarations }
  end;

var
  frmForgotPassword: TfrmForgotPassword;

implementation

uses
  ChromeSkyEstates_u;

{$R *.dfm}

procedure TfrmForgotPassword.Button1Click(Sender: TObject);
begin
  frmForgotPassword.Close;
  frmLoginScreen.Close;
end;

procedure TfrmForgotPassword.FormActivate(Sender: TObject);
begin
  edtNewPassword.Visible := False;
  edtVerifyPassword.Visible := False;
  pnlGreetings.Visible := False;
  lblNewPassword.Visible := False;
  lblConfirmPassword.Visible := False;
end;

procedure TfrmForgotPassword.spdLoginClick(Sender: TObject);
begin
  frmForgotPassword.Close;
  frmLoginScreen.Show;
end;

procedure TfrmForgotPassword.spdVerifyClick(Sender: TObject);
var
  sPassword, sUser: string;
  bFound: boolean;

begin
  sUser = edtUsername.Text;
  bFound := False;
  if spdVerify.Caption = 'Verify Account' then
  begin
    sUser := edtUsername.Text;
    with dmCSE do
    begin
      tblLogin.First;
      while not tblLogin.Eof do
      begin
        if tblLogin['Email'] = sUser then
        begin
          bFound := True;
          Showmessage('Account Verified');
          edtUsername.Visible := False;
          edtNewPassword.Visible := True;
          edtVerifyPassword.Visible := True;
          lblNewPassword.Visible := True;
          lblConfirmPassword.Visible := True;
          lblInstruction.Caption := 'Please enter your new password.';
          spdVerify.Caption := 'Reset Password';
          exit;
        end
        else
          tblLogin.Next;

      end;
      if bFound = False then
      begin
        Showmessage('Account not Found');
      end;

    end;
  end;

  if spdVerify.Caption = 'Reset Password' then
  begin
    with dmCSE do
    begin
      tblLogin.First;
      while not tblLogin.Eof do
      begin
        if tblLogin.Locate('Email', sUser, []) = True then
        begin
          tblLogin.Edit;
          tblLogin['Password'] := sPassword;
          tblLogin.Post;
          pnlGreetings.Visible := True;

        end
        else
        begin
          Showmessage('User not found');
          exit;
        end;

      end;
    end;
  end;

end;

end.
